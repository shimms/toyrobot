#!/usr/bin/env ruby

DEVELOPMENT=ENV["DEVELOPMENT"]

begin
   require 'logger'
   require 'fileutils'
   require './lib/toy_robot.rb'

   FileUtils.mkdir_p "logs"
   logger = Logger.new('logs/logfile.log', 10, 1024000)

   options = ToyRobot::Cli.parse_options

   if DEVELOPMENT
      logger.level = Logger::DEBUG
      require 'byebug'

      puts "Started with options: #{options}"
   else
      logger.level = Logger::WARN
   end   

   world = ToyRobot::World.new(
      options[:width].to_i,
      options[:height].to_i
   )

   robot = ToyRobot::Robot.new(world, ToyRobot::Reducer.new)
   cli = ToyRobot::Cli.new(ToyRobot::Parser.new, robot, logger)

   if $stdin.tty?   
      cli.start_interactive
   else
      cli.start_stream($stdin)
   end
rescue => e
   # Top level catch all for truely unexpected errors as a line of last defense.

   if DEVELOPMENT
      raise
   else
      logger.fatal e

      puts
      puts "â€¼ Whoops! Something really unexpected happened, and the program has crashed."
      puts

      exit 1
   end
end